buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/repo' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.0'
    }
}

apply plugin: 'com.android.application'

repositories {
    jcenter()
    maven { url "http://simperium.github.io/simplenote-android" }
    maven { url "http://wordpress-mobile.github.io/Android-PasscodeLock"}
    maven { url 'http://wordpress-mobile.github.io/WordPress-Android' }
    maven { url "https://jitpack.io" }
    maven { url "https://s3.amazonaws.com/repo.commonsware.com" }
}

dependencies {
    compile "com.simperium.android:simperium:0.6.8"
    compile "com.android.support:appcompat-v7:24.2.1"
    compile 'com.android.support:design:24.2.1'
    compile 'com.android.support:support-vector-drawable:24.2.1'
    compile "com.google.android.gms:play-services-analytics:9.6.1"
    compile "com.google.android.gms:play-services-wearable:9.6.1"
    compile 'org.wordpress:passcodelock:1.3.0'
    compile 'com.automattic:tracks:1.1.0'
    compile 'com.loopj.android:android-async-http:1.4.9'
    compile 'com.commonsware.cwac:anddown:0.2.4'

    wearApp project(':Wear')
}

version "1.5.1"

android {

    compileSdkVersion 24
    buildToolsVersion "24.0.3"

    defaultConfig {
        applicationId "com.automattic.simplenote"
        versionName project.version
        versionCode 53
        minSdkVersion 15
        targetSdkVersion 24

        buildConfigField "String", "SIMPERIUM_APP_ID", "\"${project.simperiumAppId}\""
        buildConfigField "String", "SIMPERIUM_APP_KEY", "\"${project.simperiumAppKey}\""
        buildConfigField "String", "GOOGLE_ANALYTICS_ID", "\"${project.googleAnalyticsId}\"";
        buildConfigField "String", "BUILD", "\"${gitDescribe()}\"";
        buildConfigField "String", "BUILD_HASH", "\"${gitHash()}\"";

     }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            applicationIdSuffix '.debug'
        }
    }
	
	lintOptions {
	    checkReleaseBuilds false
	}

    useLibrary 'org.apache.http.legacy'
}

if(["storeFile", "storePassword", "keyAlias", "keyPassword"].count { !project.hasProperty(it) } == 0 ){
    android {
      signingConfigs {
          release {
              storeFile = file(project.storeFile)
              storePassword = project.storePassword
              keyAlias = project.keyAlias
              keyPassword = project.keyPassword
          }
          debug {
              storeFile = file(project.storeFile)
              storePassword = project.storePassword
              keyAlias = project.keyAlias
              keyPassword = project.keyPassword
          }
      }
    }
    android.buildTypes.release.signingConfig = android.signingConfigs.release
}

